{"version":3,"sources":["services/persons.js","components/Filter/index.js","components/Person/index.js","components/PersonForm/index.js","components/Notification/index.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","setFilter","value","onChange","e","target","Person","person","handleClick","key","name","number","onClick","PersonForm","handleSubmit","newName","setNewName","newNumber","setNewNumber","onSubmit","required","type","Notification","message","className","App","useState","persons","setPersons","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","addPerson","returnedPerson","concat","clearForm","setTimeout","catch","error","console","log","updatePerson","find","changePerson","map","p","filteredPersons","RegExp","test","preventDefault","window","confirm","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1be24d9.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deletePerson\n}\n","import React from 'react'\n\nconst Filter = ({filter, setFilter}) => {\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={e => setFilter(e.target.value)} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ person, handleClick }) => {\n  return (\n    <p key={person.name}>\n      {person.name} {person.number}\n      <button onClick={handleClick}>delete</button>\n    </p>\n  )\n}\n\nexport default Person\n","import React from 'react'\n\nconst PersonForm = ({\n  handleSubmit,\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:{' '}\n        <input\n          value={newName}\n          onChange={e => setNewName(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        number:{' '}\n        <input value={newNumber} onChange={e => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\n\nimport Filter from './components/Filter'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const person = persons.find(person => person.name === newName)\n\n    if (person) {\n      const result = window.confirm(\n        `${person.name} is already added to phonebook, replace the old number with a new one ?`\n      )\n      if (result) {\n        updatePerson(person.id)\n      }\n      return\n    }\n    addPerson(newName, newNumber)\n  }\n\n  const addPerson = (name, number) => {\n    const personObject = { name, number }\n    personsService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        clearForm()\n\n        setErrorMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        // this is the way to access the error message\n        console.log(error.response.data)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const updatePerson = id => {\n    const person = persons.find(person => person.id === id)\n    const changePerson = { ...person, number: newNumber }\n\n    personsService\n      .update(id, changePerson)\n      .then(returnedPerson => {\n        setPersons(\n          persons.map(person => (person.id !== id ? person : returnedPerson))\n        )\n        clearForm()\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Infomation '${person.name}' has already been removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n  }\n\n  const deletePerson = person => {\n    const result = window.confirm(`Delete ${person.name} ?`)\n    if (result) {\n      personsService.deletePerson(person.id).then(() => {\n        personsService.getAll().then(initialPersons => {\n          setPersons(initialPersons)\n        })\n      })\n    }\n  }\n\n  const clearForm = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const filteredPersons = persons.filter(person => {\n    const regexp = new RegExp(filter, 'i')\n    return regexp.test(person.name)\n  })\n\n  const personRows = () =>\n    filteredPersons.map(person => (\n      <Person\n        key={person.id}\n        person={person}\n        handleClick={() => deletePerson(person)}\n      />\n    ))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n\n      <Filter filter={filter} setFilter={setFilter} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n      />\n\n      <h2>Numbers</h2>\n      {personRows()}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}